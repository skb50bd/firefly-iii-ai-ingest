// <auto-generated>
/*
 * Firefly III API v6.3.0
 *
 * This is the documentation of the Firefly III API. Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. <br><br> Please keep in mind that the demo site does **not** accept requests from `curl`, `colly`, `wget`, etc. You must use a browser or a tool like Insomnia to make your test requests. <br><br> To learn more about the idiosyncrasies of this API, please read about the API in the [Firefly III API documentation](https://docs.firefly-iii.org/references/firefly-iii/api/). <br><br> <small>This file was last generated on 2025-08-16 @ 20:21:49 (Europe/Amsterdam)</small> 
 *
 * The version of the OpenAPI document: v6.3.0
 * Contact: james@firefly-iii.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Brotal.FireflyIII.Client;

namespace Brotal.FireflyIII.Model
{
    /// <summary>
    /// PageLink
    /// </summary>
    public partial class PageLink : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PageLink" /> class.
        /// </summary>
        /// <param name="self">self</param>
        /// <param name="first">first</param>
        /// <param name="next">next</param>
        /// <param name="prev">prev</param>
        /// <param name="last">last</param>
        [JsonConstructor]
        public PageLink(Option<string?> self = default, Option<string?> first = default, Option<string?> next = default, Option<string?> prev = default, Option<string?> last = default)
        {
            SelfOption = self;
            FirstOption = first;
            NextOption = next;
            PrevOption = prev;
            LastOption = last;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Self
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SelfOption { get; private set; }

        /// <summary>
        /// Gets or Sets Self
        /// </summary>
        /* <example>https://demo.firefly-iii.org/api/v1/OBJECT?&amp;page&#x3D;4</example> */
        [JsonPropertyName("self")]
        public string? Self { get { return this.SelfOption; } set { this.SelfOption = new(value); } }

        /// <summary>
        /// Used to track the state of First
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> FirstOption { get; private set; }

        /// <summary>
        /// Gets or Sets First
        /// </summary>
        /* <example>https://demo.firefly-iii.org/api/v1/OBJECT?&amp;page&#x3D;1</example> */
        [JsonPropertyName("first")]
        public string? First { get { return this.FirstOption; } set { this.FirstOption = new(value); } }

        /// <summary>
        /// Used to track the state of Next
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> NextOption { get; private set; }

        /// <summary>
        /// Gets or Sets Next
        /// </summary>
        /* <example>https://demo.firefly-iii.org/api/v1/OBJECT?&amp;page&#x3D;3</example> */
        [JsonPropertyName("next")]
        public string? Next { get { return this.NextOption; } set { this.NextOption = new(value); } }

        /// <summary>
        /// Used to track the state of Prev
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> PrevOption { get; private set; }

        /// <summary>
        /// Gets or Sets Prev
        /// </summary>
        /* <example>https://demo.firefly-iii.org/api/v1/OBJECT?&amp;page&#x3D;2</example> */
        [JsonPropertyName("prev")]
        public string? Prev { get { return this.PrevOption; } set { this.PrevOption = new(value); } }

        /// <summary>
        /// Used to track the state of Last
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> LastOption { get; private set; }

        /// <summary>
        /// Gets or Sets Last
        /// </summary>
        /* <example>https://demo.firefly-iii.org/api/v1/OBJECT?&amp;page&#x3D;12</example> */
        [JsonPropertyName("last")]
        public string? Last { get { return this.LastOption; } set { this.LastOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PageLink {\n");
            sb.Append("  Self: ").Append(Self).Append("\n");
            sb.Append("  First: ").Append(First).Append("\n");
            sb.Append("  Next: ").Append(Next).Append("\n");
            sb.Append("  Prev: ").Append(Prev).Append("\n");
            sb.Append("  Last: ").Append(Last).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="PageLink" />
    /// </summary>
    public class PageLinkJsonConverter : JsonConverter<PageLink>
    {
        /// <summary>
        /// Deserializes json to <see cref="PageLink" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override PageLink Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> self = default;
            Option<string?> first = default;
            Option<string?> next = default;
            Option<string?> prev = default;
            Option<string?> last = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "self":
                            self = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "first":
                            first = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "next":
                            next = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "prev":
                            prev = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "last":
                            last = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (self.IsSet && self.Value == null)
                throw new ArgumentNullException(nameof(self), "Property is not nullable for class PageLink.");

            if (first.IsSet && first.Value == null)
                throw new ArgumentNullException(nameof(first), "Property is not nullable for class PageLink.");

            if (last.IsSet && last.Value == null)
                throw new ArgumentNullException(nameof(last), "Property is not nullable for class PageLink.");

            return new PageLink(self, first, next, prev, last);
        }

        /// <summary>
        /// Serializes a <see cref="PageLink" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="pageLink"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, PageLink pageLink, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, pageLink, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="PageLink" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="pageLink"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, PageLink pageLink, JsonSerializerOptions jsonSerializerOptions)
        {
            if (pageLink.SelfOption.IsSet && pageLink.Self == null)
                throw new ArgumentNullException(nameof(pageLink.Self), "Property is required for class PageLink.");

            if (pageLink.FirstOption.IsSet && pageLink.First == null)
                throw new ArgumentNullException(nameof(pageLink.First), "Property is required for class PageLink.");

            if (pageLink.LastOption.IsSet && pageLink.Last == null)
                throw new ArgumentNullException(nameof(pageLink.Last), "Property is required for class PageLink.");

            if (pageLink.SelfOption.IsSet)
                writer.WriteString("self", pageLink.Self);

            if (pageLink.FirstOption.IsSet)
                writer.WriteString("first", pageLink.First);

            if (pageLink.NextOption.IsSet)
                if (pageLink.NextOption.Value != null)
                    writer.WriteString("next", pageLink.Next);
                else
                    writer.WriteNull("next");

            if (pageLink.PrevOption.IsSet)
                if (pageLink.PrevOption.Value != null)
                    writer.WriteString("prev", pageLink.Prev);
                else
                    writer.WriteNull("prev");

            if (pageLink.LastOption.IsSet)
                writer.WriteString("last", pageLink.Last);
        }
    }
}
