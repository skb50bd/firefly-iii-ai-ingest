@model Brotal.FireflyBuddy.Models.ViewModels.MessagesIndexViewModel
@{
    ViewData["Title"] = "Messages";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="bi bi-chat-text"></i> Messages</h2>
    <a href="@Url.Action("Create")" class="btn btn-primary">
        <i class="bi bi-plus-circle"></i> Add New Message
    </a>
</div>

@if (Model.Messages.Any())
{
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Text</th>
                            <th>Source</th>
                            <th>Status</th>
                            <th>Created</th>
                            <th>Processed</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var message in Model.Messages)
                        {
                            <tr>
                                <td>
                                    <div class="text-truncate" style="max-width: 300px;" title="@message.Text">
                                        @message.Text
                                    </div>
                                </td>
                                <td>
                                    <span class="badge bg-secondary">@(message.Source ?? "Unknown")</span>
                                </td>
                                <td>
                                    <span class="badge bg-@GetStatusColor(message.Status)">@message.Status</span>
                                </td>
                                <td>
                                    <small class="text-muted">@message.CreatedAt.ToString("MMM dd, HH:mm")</small>
                                </td>
                                <td>
                                    @if (message.ProcessedAt.HasValue)
                                    {
                                        <small class="text-muted">@message.ProcessedAt.Value.ToString("MMM dd, HH:mm")</small>
                                    }
                                    else
                                    {
                                        <small class="text-muted">-</small>
                                    }
                                </td>
                                <td>
                                    <a href="@Url.Action("Details", new { id = message.Id })" class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-eye"></i> View
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    @if (Model.CurrentPage > 1 || Model.Messages.Count == Model.PageSize)
    {
        <nav aria-label="Messages pagination">
            <ul class="pagination justify-content-center">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })">Previous</a>
                    </li>
                }
                <li class="page-item active">
                    <span class="page-link">@Model.CurrentPage</span>
                </li>
                @if (Model.Messages.Count == Model.PageSize)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })">Next</a>
                    </li>
                }
            </ul>
        </nav>
    }
}
else
{
    <div class="card">
        <div class="card-body text-center">
            <i class="bi bi-chat-text display-1 text-muted"></i>
            <h4 class="mt-3">No messages yet</h4>
            <p class="text-muted">Start by adding your first message to begin processing transactions.</p>
            <a href="@Url.Action("Create")" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Add Your First Message
            </a>
        </div>
    </div>
}

@functions {
    string GetStatusColor(Brotal.FireflyBuddy.Data.MessageStatus status)
    {
        return status switch
        {
            Brotal.FireflyBuddy.Data.MessageStatus.Pending => "warning",
            Brotal.FireflyBuddy.Data.MessageStatus.Processing => "info",
            Brotal.FireflyBuddy.Data.MessageStatus.Processed => "success",
            Brotal.FireflyBuddy.Data.MessageStatus.Failed => "danger",
            Brotal.FireflyBuddy.Data.MessageStatus.Skipped => "secondary",
            _ => "secondary"
        };
    }
}
