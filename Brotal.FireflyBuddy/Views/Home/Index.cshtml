@{
    ViewData["Title"] = "Dashboard";
}

<div class="row">
    <div class="col-12">
        <h1 class="display-4 mb-4">
            <i class="bi bi-fire text-primary"></i> Firefly Buddy Dashboard
        </h1>
        <p class="lead">Your AI-powered companion for Firefly-III transaction management</p>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-chat-text"></i> Recent Messages
                </h5>
            </div>
            <div class="card-body">
                @if (Model.RecentMessages.Any())
                {
                    @foreach (var message in Model.RecentMessages)
                    {
                        <div class="border-bottom pb-2 mb-2">
                            <div class="d-flex justify-content-between align-items-start">
                                <div class="flex-grow-1">
                                    <p class="mb-1 text-truncate" style="max-width: 300px;" title="@message.Text">
                                        @message.Text
                                    </p>
                                    <small class="text-muted">
                                        <i class="bi bi-clock"></i> @message.CreatedAt.ToString("MMM dd, HH:mm")
                                        <span class="badge bg-@GetStatusColor(message.Status) ms-2">@message.Status</span>
                                    </small>
                                </div>
                                <a href="@Url.Action("Details", "Messages", new { id = message.Id })" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-eye"></i>
                                </a>
                            </div>
                        </div>
                    }
                    <div class="text-center">
                        <a href="@Url.Action("Index", "Messages")" class="btn btn-primary">
                            <i class="bi bi-list"></i> View All Messages
                        </a>
                    </div>
                }
                else
                {
                    <p class="text-muted">No messages yet. <a href="@Url.Action("Create", "Messages")">Add your first message</a></p>
                }
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-file-earmark-text"></i> Recent Drafts
                </h5>
            </div>
            <div class="card-body">
                @if (Model.RecentDrafts.Any())
                {
                    @foreach (var draft in Model.RecentDrafts)
                    {
                        <div class="border-bottom pb-2 mb-2">
                            <div class="d-flex justify-content-between align-items-start">
                                <div class="flex-grow-1">
                                    <h6 class="mb-1">@draft.Description</h6>
                                    <p class="mb-1">
                                        <span class="badge bg-info">@draft.Type</span>
                                        <strong class="text-success">@draft.Amount.ToString("C")</strong>
                                        <span class="text-muted">@draft.CurrencyCode</span>
                                    </p>
                                    <small class="text-muted">
                                        <i class="bi bi-clock"></i> @draft.CreatedAt.ToString("MMM dd, HH:mm")
                                        <span class="badge bg-@GetDraftStatusColor(draft.Status) ms-2">@draft.Status</span>
                                    </small>
                                </div>
                                <a href="@Url.Action("Details", "Drafts", new { id = draft.Id })" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-eye"></i>
                                </a>
                            </div>
                        </div>
                    }
                    <div class="text-center">
                        <a href="@Url.Action("Index", "Drafts")" class="btn btn-primary">
                            <i class="bi bi-list"></i> View All Drafts
                        </a>
                    </div>
                }
                else
                {
                    <p class="text-muted">No drafts yet. Messages will be processed automatically.</p>
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-lightning"></i> Quick Actions
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <a href="@Url.Action("Create", "Messages")" class="btn btn-success btn-lg w-100 mb-3">
                            <i class="bi bi-plus-circle"></i><br>
                            Add New Message
                        </a>
                    </div>
                    <div class="col-md-4">
                        <a href="@Url.Action("Index", "Messages")" class="btn btn-info btn-lg w-100 mb-3">
                            <i class="bi bi-chat-text"></i><br>
                            View Messages
                        </a>
                    </div>
                    <div class="col-md-4">
                        <a href="@Url.Action("Index", "Drafts")" class="btn btn-warning btn-lg w-100 mb-3">
                            <i class="bi bi-file-earmark-text"></i><br>
                            Manage Drafts
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusColor(Brotal.FireflyBuddy.Data.MessageStatus status)
    {
        return status switch
        {
            Brotal.FireflyBuddy.Data.MessageStatus.Pending => "warning",
            Brotal.FireflyBuddy.Data.MessageStatus.Processing => "info",
            Brotal.FireflyBuddy.Data.MessageStatus.Processed => "success",
            Brotal.FireflyBuddy.Data.MessageStatus.Failed => "danger",
            Brotal.FireflyBuddy.Data.MessageStatus.Skipped => "secondary",
            _ => "secondary"
        };
    }
    
    string GetDraftStatusColor(Brotal.FireflyBuddy.Data.DraftStatus status)
    {
        return status switch
        {
            Brotal.FireflyBuddy.Data.DraftStatus.Pending => "warning",
            Brotal.FireflyBuddy.Data.DraftStatus.Ready => "success",
            Brotal.FireflyBuddy.Data.DraftStatus.Submitted => "info",
            Brotal.FireflyBuddy.Data.DraftStatus.Failed => "danger",
            Brotal.FireflyBuddy.Data.DraftStatus.Cancelled => "secondary",
            _ => "secondary"
        };
    }
}
