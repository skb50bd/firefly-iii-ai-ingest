@model Brotal.FireflyBuddy.Models.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<!-- Dashboard Overview -->
<div class="dashboard-grid">
    <div class="dashboard-card">
        <div class="dashboard-card-header">
            <h3 class="dashboard-card-title">Recent Messages</h3>
            <i class="bi bi-chat-text dashboard-card-icon"></i>
        </div>
        <div class="card-body">
            @if (Model.RecentMessages.Any())
            {
                @foreach (var message in Model.RecentMessages)
                {
                    <div class="message-item">
                        <div class="message-content">
                            <p class="message-text" title="@message.Text">@message.Text</p>
                            <div class="message-meta">
                                <span class="message-time">
                                    <i class="bi bi-clock"></i> @message.CreatedAt.ToString("MMM dd, HH:mm")
                                </span>
                                <span class="badge badge-@GetStatusColor(message.Status)">@message.Status</span>
                            </div>
                        </div>
                        <a href="@Url.Action("Details", "Messages", new { id = message.Id })" class="btn btn-sm">
                            <i class="bi bi-eye"></i>
                        </a>
                    </div>
                }
                <div class="text-center mt-md">
                    <a href="@Url.Action("Index", "Messages")" class="btn btn-primary">
                        <i class="bi bi-list"></i> View All Messages
                    </a>
                </div>
            }
            else
            {
                <div class="empty-state">
                    <i class="bi bi-chat-text empty-icon"></i>
                    <p class="text-secondary">No messages yet</p>
                    <a href="@Url.Action("Create", "Messages")" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> Add your first message
                    </a>
                </div>
            }
        </div>
    </div>

    <div class="dashboard-card">
        <div class="dashboard-card-header">
            <h3 class="dashboard-card-title">Recent Drafts</h3>
            <i class="bi bi-file-earmark-text dashboard-card-icon"></i>
        </div>
        <div class="card-body">
            @if (Model.RecentDrafts.Any())
            {
                @foreach (var draft in Model.RecentDrafts)
                {
                    <div class="draft-item">
                        <div class="draft-content">
                            <h4 class="draft-title">@draft.Description</h4>
                            <div class="draft-meta">
                                <span class="badge badge-info">@draft.Type</span>
                                <span class="draft-amount">@draft.Amount.ToString("C") @draft.CurrencyCode</span>
                            </div>
                            <div class="draft-footer">
                                <span class="draft-time">
                                    <i class="bi bi-clock"></i> @draft.CreatedAt.ToString("MMM dd, HH:mm")
                                </span>
                                <span class="badge badge-@GetDraftStatusColor(draft.Status)">@draft.Status</span>
                            </div>
                        </div>
                        <a href="@Url.Action("Details", "Drafts", new { id = draft.Id })" class="btn btn-sm">
                            <i class="bi bi-eye"></i>
                        </a>
                    </div>
                }
                <div class="text-center mt-md">
                    <a href="@Url.Action("Index", "Drafts")" class="btn btn-primary">
                        <i class="bi bi-list"></i> View All Drafts
                    </a>
                </div>
            }
            else
            {
                <div class="empty-state">
                    <i class="bi bi-file-earmark-text empty-icon"></i>
                    <p class="text-secondary">No drafts yet</p>
                    <p class="text-tertiary">Messages will be processed automatically</p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Quick Actions -->
<div class="quick-actions">
    <a href="@Url.Action("Create", "Messages")" class="quick-action-btn">
        <i class="bi bi-plus-circle quick-action-icon"></i>
        <span class="quick-action-text">Add New Message</span>
    </a>
    <a href="@Url.Action("Index", "Messages")" class="quick-action-btn">
        <i class="bi bi-chat-text quick-action-icon"></i>
        <span class="quick-action-text">View Messages</span>
    </a>
    <a href="@Url.Action("Index", "Drafts")" class="quick-action-btn">
        <i class="bi bi-file-earmark-text quick-action-icon"></i>
        <span class="quick-action-text">Manage Drafts</span>
    </a>
</div>

@functions {
    string GetStatusColor(Brotal.FireflyBuddy.Data.MessageStatus status)
    {
        return status switch
        {
            Brotal.FireflyBuddy.Data.MessageStatus.Pending => "warning",
            Brotal.FireflyBuddy.Data.MessageStatus.Processing => "info",
            Brotal.FireflyBuddy.Data.MessageStatus.Processed => "success",
            Brotal.FireflyBuddy.Data.MessageStatus.Failed => "danger",
            Brotal.FireflyBuddy.Data.MessageStatus.Skipped => "secondary",
            _ => "secondary"
        };
    }

    string GetDraftStatusColor(Brotal.FireflyBuddy.Data.DraftStatus status)
    {
        return status switch
        {
            Brotal.FireflyBuddy.Data.DraftStatus.Pending => "warning",
            Brotal.FireflyBuddy.Data.DraftStatus.Ready => "success",
            Brotal.FireflyBuddy.Data.DraftStatus.Submitted => "info",
            Brotal.FireflyBuddy.Data.DraftStatus.Failed => "danger",
            Brotal.FireflyBuddy.Data.DraftStatus.Cancelled => "secondary",
            _ => "secondary"
        };
    }
}
